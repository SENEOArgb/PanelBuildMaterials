// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PanelBuildMaterials.Models;

#nullable disable

namespace PanelBuildMaterials.Migrations
{
    [DbContext(typeof(PanelDbContext))]
    [Migration("20241203223529_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterial", b =>
                {
                    b.Property<int>("BuildingMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("buildingMaterialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingMaterialId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("NameBuildingMaterial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("nameBuildingMaterial");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(8, 0)")
                        .HasColumnName("retailPrice");

                    b.Property<decimal>("WholesalePrice")
                        .HasColumnType("decimal(8, 0)")
                        .HasColumnName("wholesalePrice");

                    b.HasKey("BuildingMaterialId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BuildingMaterials");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterialsServicesOrder", b =>
                {
                    b.Property<int>("BuildingMaterialServiceOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingMaterialServiceOrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingMaterialServiceOrderId"));

                    b.Property<int?>("BuildingMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("buildingMaterialId");

                    b.Property<int?>("CountBuildingMaterial")
                        .HasColumnType("int")
                        .HasColumnName("countBuildingMaterial");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(9, 2)")
                        .HasColumnName("orderPrice");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.HasKey("BuildingMaterialServiceOrderId");

                    b.HasIndex("BuildingMaterialId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BuildingMaterialsServicesOrders");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterialsWarehouse", b =>
                {
                    b.Property<int>("BuildingMaterialWarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("buildingMaterialWarehouseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingMaterialWarehouseId"));

                    b.Property<int>("AmountBuildingMaterial")
                        .HasColumnType("int")
                        .HasColumnName("amountBuildingMaterial");

                    b.Property<int>("BuildingMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("buildingMaterialId");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouseId");

                    b.HasKey("BuildingMaterialWarehouseId");

                    b.HasIndex("BuildingMaterialId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("BuildingMaterialsWarehouses");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nameCategory");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("logID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<DateTime>("DateTimeLog")
                        .HasColumnType("datetime")
                        .HasColumnName("dateTimeLog");

                    b.Property<string>("LogDescription")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("logDescription");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("dateOrder");

                    b.Property<TimeOnly?>("TimeOrder")
                        .HasPrecision(2)
                        .HasColumnType("time(2)")
                        .HasColumnName("timeOrder");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("NameService")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nameService");

                    b.Property<decimal>("PriceService")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("priceService");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserLaws")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("userLaws");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("userLogin");

                    b.Property<string>("UserPasswordHash")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("userPasswordHash");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("warehouseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"));

                    b.Property<string>("WarehouseCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("warehouseCity");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("warehouseName");

                    b.Property<string>("WarehouseStreet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("warehouseStreet");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterial", b =>
                {
                    b.HasOne("PanelBuildMaterials.Models.Category", "Category")
                        .WithMany("BuildingMaterials")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_BuildingMaterials_Categories1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterialsServicesOrder", b =>
                {
                    b.HasOne("PanelBuildMaterials.Models.BuildingMaterial", "BuildingMaterial")
                        .WithMany("BuildingMaterialsServicesOrders")
                        .HasForeignKey("BuildingMaterialId")
                        .HasConstraintName("FK_BuildingMaterialsServicesOrders_BuildingMaterials1");

                    b.HasOne("PanelBuildMaterials.Models.Order", "Order")
                        .WithMany("BuildingMaterialsServicesOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BuildingMaterialsServicesOrders_Orders1");

                    b.HasOne("PanelBuildMaterials.Models.Service", "Service")
                        .WithMany("BuildingMaterialsServicesOrders")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_BuildingMaterialsServicesOrders_Services1");

                    b.Navigation("BuildingMaterial");

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterialsWarehouse", b =>
                {
                    b.HasOne("PanelBuildMaterials.Models.BuildingMaterial", "BuildingMaterial")
                        .WithMany("BuildingMaterialsWarehouses")
                        .HasForeignKey("BuildingMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BuildingMaterialsWarehouses_BuildingMaterials");

                    b.HasOne("PanelBuildMaterials.Models.Warehouse", "Warehouse")
                        .WithMany("BuildingMaterialsWarehouses")
                        .HasForeignKey("WarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK_BuildingMaterialsWarehouses_Warehouses1");

                    b.Navigation("BuildingMaterial");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Log", b =>
                {
                    b.HasOne("PanelBuildMaterials.Models.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Logs_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Order", b =>
                {
                    b.HasOne("PanelBuildMaterials.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Users1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.BuildingMaterial", b =>
                {
                    b.Navigation("BuildingMaterialsServicesOrders");

                    b.Navigation("BuildingMaterialsWarehouses");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Category", b =>
                {
                    b.Navigation("BuildingMaterials");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Order", b =>
                {
                    b.Navigation("BuildingMaterialsServicesOrders");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Service", b =>
                {
                    b.Navigation("BuildingMaterialsServicesOrders");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.User", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PanelBuildMaterials.Models.Warehouse", b =>
                {
                    b.Navigation("BuildingMaterialsWarehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
